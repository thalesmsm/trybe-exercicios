# Navegue at√© a pasta unix_tests ;
## Usamos o comando cd (change directory), esse comando serve para navegarmos entre os diretorios.
## Como o "caminho" at√© o diretorio unix_tests √© "arvore abaixo" usamos o ./

cd ./././unix_tests

# Crie um arquivo texto pelo terminal com o nome skills2.txt e adicione os valores Internet , Unix e Bash , um em cada linha.
## Usamos o comando cat (concatenate). Neste caso, junto com o sinal de > (maior) podemos criar ou modificar um arquivo adicionando conte√∫do.
## Neste caso usa-se s√≥ um sinal de maior pois o arquivo ainda ser√° criado e est√° "limpo".
 
cat > skills2.txt

# Adicione mais 5 itens √† sua lista de skills e depois imprima a lista ordenada no terminal. ü§ì
## Usamos ocomando cat (concatenate). Neste caso, junto com o sinal de >> (maior maior) adicionamos conte√∫do ao final do arquivo,
## sem sobrepor e apagar o que j√° tinha sido escrito

cat >> skills2.txt
JavaScript
HTML
CSS
REACT
PYTHON
## ctrl + c √© usado para encerrar o comando
ctrl + c

# Conte quantas linhas tem o arquivo skills2.txt .
## Usamos o comando wc para contar linhas, palavras e letra, por padr√£o. Neste caso o uso do -l limita o comando a mostrar quantas linhas t√äm no arquivo

wc -l skills2.txt

# Crie um arquivo chamado top_skills.txt usando o skills2.txt , contendo as 3 primeiras skills em ordem alfab√©tica.
## Atrav√©s do | (pipe) podemos encadear processos. Neste caso, o conte√∫do em skills2.txt foi posto em ordem usando o sort
## que passa essa informa√ß√£o atrav√©s do pipe para o proximo comando da linha, head -3, onde ser√° pego as tr√™s primeiras linhas do arquivo
## e criar√° outro arquivo com o uso do >, que envia to conteudo para top_skills.txt

sort skills2.txt | head -3 > top_skills.txt

# Crie um novo arquivo chamado phrases2.txt pelo terminal e adicione algumas frases de sua escolha.
## Usamos o comando concatenate, como explicado na quest√£o 2

cat > phrases2.txt

# Conte o n√∫mero de linhas que cont√™m as letras br .
## Usamos o comando grep para procurar um trecho em um arquivo, Neste caso, com auxilio do -i, para evitar o case sensitive e procurar frase que contenham 'br'
## e com auxilio do pipe podemos contar as linhas em que o 'br' aparece usando o wc -l, como explicado na quest√£o 7
grep -i 'br' phrases2.txt| wc -l

# Conte o n√∫mero de linhas que n√£o cont√™m as letras br .
## No grep aparece o -iv, onde o v tem a√ß√£o de nega√ß√£o e ir√° fazer com que o grep procure frase que contenham 'br' e wc -l contar√° as linhas, como j√° mostrado

grep -iv 'br' phrases2.txt| wc -l

# Adicione dois nomes de pa√≠ses ao final do arquivo phrases2.txt .
## Usamos o concatenate, como explicado na quest√£o 3
  
cat >> phrases2.txt

# Crie um novo arquivo chamado bunch_of_things.txt com os conte√∫dos dos arquivos phrases2.txt e countries.txt
## Usamos o concatenate, como explicado na quest√£o 3

cat phrases2.txt countries.txt >> bunch_of_things.txt

# Ordene o arquivo bunch_of_things.txt.
## Por padr√£o, o comando sort apenas mostra na tela o conte√∫do do arquivo, n√£o modifica o arquivo. J√° com o uso do -o e adicionando o arquivo a ele mesmo
## modificamos o arquivo 

sort -o bunch_of_things.txt bunch_of_things.txt

[...]
